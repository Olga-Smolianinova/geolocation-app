{"version":3,"sources":["components/Logo/Logo.js","components/Searchbar/Searchbar.js","components/Results/Results.js","api/geo-api.js","App.js","index.js"],"names":["Logo","className","fontSize","style","color","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","Results","results","console","log","map","ip","version","city","region","region_code","country_code","country_code_iso3","country_name","country_capital","country_tld","continent_code","in_eu","postal","latitude","longitude","timezone","utc_offset","country_calling_code","currency","currency_name","languages","country_area","country_population","asn","org","error","reason","fetchGeolocation","a","searchQuery","fetch","response","geolocation","json","App","setSearchQuery","setResults","setIsLoading","setError","useEffect","options","geoApi","Error","length","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc17e469.chunk.js","sourcesContent":["import React from 'react';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\n\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"Logo\">\r\n      <PlaceIcon fontSize=\"large\" style={{ color: '#d22c32' }} />\r\n      <p>Find My IP</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from 'react';\r\n\r\nimport './Searchbar.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    //  передача  props onSubmit из App.js для обработки действий когда будет изменяться query\r\n    onSubmit(query);\r\n\r\n    //   обновление input\r\n    setQuery('');\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"8.8.8.8\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './Results.css';\r\n\r\nexport default function Results({ results }) {\r\n  console.log(results);\r\n  return (\r\n    <>\r\n      <div className=\"Results-div\">\r\n        {results.map(\r\n          ({\r\n            ip,\r\n            version,\r\n            city,\r\n            region,\r\n            region_code,\r\n            country_code,\r\n            country_code_iso3,\r\n            country_name,\r\n            country_capital,\r\n            country_tld,\r\n            continent_code,\r\n            in_eu,\r\n            postal,\r\n            latitude,\r\n            longitude,\r\n            timezone,\r\n            utc_offset,\r\n            country_calling_code,\r\n            currency,\r\n            currency_name,\r\n            languages,\r\n            country_area,\r\n            country_population,\r\n            asn,\r\n            org,\r\n            error,\r\n            reason,\r\n          }) => (\r\n            <ul key={ip} className=\"results-list\">\r\n              {error ? (\r\n                <li className=\"error-msg\">{reason}</li>\r\n              ) : (\r\n                <>\r\n                  <li className=\"results-data string\">\r\n                    ip: <span className=\"results-text-str\">\"{ip}\"</span>\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    version:{' '}\r\n                    <span className=\"results-text-str\">\"{version}\"</span>\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    city: <span className=\"results-text-str\">\"{city}\"</span>\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    region: <span className=\"results-text-str\">\"{region}\"</span>\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    region code:{' '}\r\n                    <span className=\"results-text-str\"> \"{region_code}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    country code:{' '}\r\n                    <span className=\"results-text-str\">\"{country_code}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    country code iso3:{' '}\r\n                    <span className=\"results-text-str\">\r\n                      \"{country_code_iso3}\"\r\n                    </span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    country name:{' '}\r\n                    <span className=\"results-text-str\">\"{country_name}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    country capital:{' '}\r\n                    <span className=\"results-text-str\">\"{country_capital}</span>{' '}\r\n                    \"\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    country tld:{' '}\r\n                    <span className=\"results-text-str\">\"{country_tld}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    continent code:{' '}\r\n                    <span className=\"results-text-str\">\"{continent_code}</span>{' '}\r\n                    \"\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    in_eu: <span className=\"results-text-str\">\"{in_eu}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data number\">\r\n                    postal: <span className=\"results-text-num\">{postal}</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data number\">\r\n                    latitude:{' '}\r\n                    <span className=\"results-text-num\">{latitude}</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data number\">\r\n                    longitude:{' '}\r\n                    <span className=\"results-text-num\">{longitude}</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    timezone:{' '}\r\n                    <span className=\"results-text-str\">\"{timezone}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data number\">\r\n                    utc offset:{' '}\r\n                    <span className=\"results-text-num\">{utc_offset}</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data number\">\r\n                    country calling code:{' '}\r\n                    <span className=\"results-text-num\">\r\n                      {country_calling_code}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    currency:{' '}\r\n                    <span className=\"results-text-str\">\"{currency}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    currency name:{' '}\r\n                    <span className=\"results-text-str\">\"{currency_name}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    languages:{' '}\r\n                    <span className=\"results-text-str\">\"{languages}\"</span>{' '}\r\n                  </li>\r\n                  <li className=\"results-data number\">\r\n                    country area:{' '}\r\n                    <span className=\"results-text-num\">{country_area}</span>\r\n                  </li>\r\n                  <li className=\"results-data number\">\r\n                    country population:{' '}\r\n                    <span className=\"results-text-num\">\r\n                      {country_population}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    asn: <span className=\"results-text-str\"> \"{asn}\"</span>\r\n                  </li>\r\n                  <li className=\"results-data string\">\r\n                    org : <span className=\"results-text-str\">\"{org}\"</span>{' '}\r\n                  </li>\r\n                </>\r\n              )}\r\n            </ul>\r\n          ),\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","const fetchGeolocation = async ({ searchQuery = '' }) => {\r\n  try {\r\n    const response = await fetch(`https://ipapi.co/${searchQuery}/json/`);\r\n    const geolocation = response.json();\r\n    return geolocation;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { fetchGeolocation };\r\n","import React, { useState, useEffect } from 'react';\n\n// Components\nimport Logo from './components/Logo';\nimport Searchbar from './components/Searchbar';\nimport Results from './components/Results';\n\nimport geoApi from './api/geo-api';\n\nimport './App.css';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [results, setResults] = useState([]); //'Enter IP and press “Search” to get geolocation data'\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchGeolocation();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchQuery]);\n\n  const fetchGeolocation = async () => {\n    try {\n      //   выводим в отдельную переменную  searchQuery для того, чтобы передать options в props в weather-api.js;\n      const options = { searchQuery, error };\n\n      //   сотояние загрузки, меняем значение\n      setIsLoading(true);\n\n      //проверка на то, если пользователь ничего не ввел в input, не отправлять http-запрос\n      if (!searchQuery) {\n        return;\n      }\n\n      // вызов функции из файла который прописывает логику настроек Api (geo-api.js)\n      const response = await geoApi.fetchGeolocation(options);\n      console.log(response);\n\n      setResults([...results, response]);\n\n      if (!response) {\n        throw new Error('Something went wrong 😞. Please try again.');\n      }\n    } catch (error) {\n      setError(error);\n    }\n    setIsLoading(false);\n  };\n\n  const changeQuery = query => {\n    setSearchQuery(query);\n    setResults([]);\n    setError(null);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <Logo />\n        <Searchbar onSubmit={changeQuery} />\n\n        {results.length > 0 ? (\n          <Results results={results} />\n        ) : (\n          <p>Enter IP and press “Search” to get geolocation data</p>\n        )}\n\n        {error && <p className=\"error-msg\">{error.message}</p>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}